
h_hat = outer_recv().cでやった結果

h = 1 のとき、h_hat = 5.2570 - 0.0102i みたいに、虚数の方はすごい小さくなる

h = 1i のとき、h_hat = 0.0010 + 1.2195i とか 0.0071 + 5.0723i みたいに、実部の方はすごい小さくなる

h = 1 + 1i のとき、h_hat = 2.2268 + 2.2423i とか 4.2519 + 4.2531i みたいに、実部と虚部は同じくらいの大きさになる

--> h_hat を標準化したらうまくいきそう
--> いや、元の h は大きさが 1 になってる訳じゃないから、標準化は意味ない

--> 見た感じ、h の実部と虚部の比が h_hat の実部と虚部の比に等しいっぽい。

distance_h()ではなく、square_err()を使った。
square_err() --> square_dist() にした。同様にファイル名も変えた

square_dist.m : 
中身をsquare((a - c)^2 + (b - d)^2)の計算をするようにした
ただし、a + bi と c + di 

run.m : 
値をみるために、; を取っているところがあります。
h_dist_traialの値を複数ユーザでもちゃんと出せるようにした。

rev8では、h の推定値 h_hat(outer_recv().c) がどのような値になるのかを調べた。
また、二乗誤差であるMSEを計算する関数 square_dist()を作成した。
色々調べた結果、13行目にあるように、h の実部と虚部の比が h_hat の実部と虚部の比に等しいっぽい。ことがわかったので、二乗誤差の値はあまり意味をなさないことがわかった。ただ、これらのことは、本当に outer_recv().c が h_hat であることが前提だし、なんで 13行目のことが起きるのかは現時点で全然わかっていない。

とりあえず、 CHIRRUP_good_1_slot_rev* はrev8で終了。完成。ということにする。

次は、この CHIRRUP_good_1_slot_rev8 とEMアルゴリズムを合わせていく。
プロジェクト名は DRAFTディレクトリ配下の DRAFT_0_0 にする。
